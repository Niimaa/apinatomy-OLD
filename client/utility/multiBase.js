'use strict';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
define(['lodash'], function (_) {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	_.mixin({
		multiBase: function multiBase(num, A, minLength) {
			if (_(minLength).isUndefined()) { minLength = 1 }
			if ((_(A).isEmpty() || num === 0) && minLength <= 0) { return []; }
			var val = num % _(A).last();
			return multiBase((num - val) / _(A).last(),  _(A).initial(),  minLength-1).concat([val]);
		},
		suffixed: function (A, suffixes) {
			var result = [];
			_(A).forEachRight(function (val, i) {
				result.unshift(val + suffixes[i-A.length+suffixes.length]);
			});
			return result;
		}
	}, {chain: true});


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
