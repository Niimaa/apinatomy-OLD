'use strict';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
define(['angular',
        'app/module',
        'chroma',
        'lodash',
        'partial/treemap/layout/manager',
        'resource/service',
        'focus/service',
        '$bind/service'], function
		(ng, ApiNATOMY, color, _) {
//  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	ApiNATOMY.directive('amyCircuitboardTile', ['ResourceService', 'RecursionHelper', function (qResources, RecursionHelper) {
		return {

			////////////////////////////////////////////////////////////////////////////////////////////////////////////

			restrict:    'E',
			replace:     false,
			templateUrl: 'partial/circuitboard/tile/view.html',
			scope:       {
				attrUri:      '@uri',
				attrDepth:    '@depth',
				attrMaxDepth: '@maxDepth'
			},

			////////////////////////////////////////////////////////////////////////////////////////////////////////////

			controller: ['$scope', function ($scope) {
				$scope._ = _;
			}],

			////////////////////////////////////////////////////////////////////////////////////////////////////////////

			compile: function (dElement) {
				return RecursionHelper.compile(dElement, {

					pre: function preLink($scope, iElement, iAttrs, controller) {
						$scope.uri = $scope.attrUri;
						$scope.depth = _.parseInt($scope.attrDepth);
						$scope.maxDepth = _.parseInt($scope.attrMaxDepth);
						$scope.hasBeenOpen = false;

						$scope.$watch('open', function (isOpen) {
							$scope.hasBeenOpen = $scope.hasBeenOpen || isOpen;
						});

						$scope.structure = {};

						qResources.structures([$scope.uri]).then(function (structure) {
							$scope.structure = structure[0];
						});

					},

					post: function postLink($scope, iElement, iAttrs, controller) {

					}

				});
			}

			////////////////////////////////////////////////////////////////////////////////////////////////////////////
		};
	}]);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
