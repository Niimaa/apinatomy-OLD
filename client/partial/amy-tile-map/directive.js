'use strict';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
define(['lodash', 'angular', 'app/module',
	'$bind/service',
	'defaults/service',
	'partial/amy-tile-map/tile/directive',
	'partial/tile-map/directive'
], function (_, ng, app) {
//  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	app.directive('amyTileMap', ['ResourceService', 'RecursionHelper', 'defaults', function (ResourceService, RecursionHelper, defaults) {


		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////


		var generateTileMapDefaults = defaults({
			layout : " 'rowsOfTiles' ",
			spacing: " 2 "
		});


		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////


		return {
			restrict   : 'E',
			replace    : true,
			templateUrl: 'partial/amy-tile-map/view.html',
			require    : 'ngModel',
			scope      : true,

			////////////////////////////////////////////////////////////////////////////////////////////////////////////
			////////////////////////////////////////////////////////////////////////////////////////////////////////////

			compile: function () {
				return {

					pre: function preLink($scope, iElement, iAttrs, ngModel) {
						iElement.attr('amy-tile-map', '');

						//////////////////// Getting the model value ///////////////////////////////////////////////////

						ngModel.$render = function () {
							$scope.entity = ngModel.$modelValue;

							//////////////////// TileMap / Artefact Hierarchy //////////////////////////////////////////

							$scope.tileMap =
							$scope.artefact = {
								id      : $scope.$id,
								type    : 'tileMap',
								show    : false,

								//// artefact hierarchy:
								parent  : $scope.$parent.artefact,
								children: [],
								root    : $scope.$parent.artefact.root,

								//// which tile is maximized
								maximizedChild: null
							};


							//////////////////// Maintaining the Hierarchy /////////////////////////////////////////////

							//// Announce this tile to the parent artefact
							//
							$scope.artefact.parent.children.push($scope.artefact);


							//////////////////// Tilemap Styling ///////////////////////////////////////////////////////

							$scope.entity._promise.then(function () {

								//////////////////// Loading sub-entities //////////////////////////////////////////////

								ResourceService.entities(_($scope.entity.sub).map(function (sub) {
									return sub.entity._id;
								}).value());

								//////////////////// Fetch tileMap styling options /////////////////////////////////////

								$scope.styling = generateTileMapDefaults($scope.entity.tileMap, {});

							});

						};


					},

					post: function () {
					}

				}
			}

			////////////////////////////////////////////////////////////////////////////////////////////////////////////
		};
	}]);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
});/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
